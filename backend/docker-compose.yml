version: "3.12"
services:
  db:
    image: postgres:15
    container_name: db_app
    command: -p 5433
    expose:
      - 5433
    env_file:
      - .env-docker
    ports:
      - 5433:5433
  test_db:
    image: postgres:15
    container_name: test_db_app
    command: -p 5434
    expose:
      - 5434
    env_file:
      - .env-docker
    ports:
      - 5434:5434

  redis:
    image: redis:7
    container_name: redis_app
    command: --port 5371 --requirepass "AVNS_w6X_JVOCj6vbTjwIowO"
    expose:
      - 5371
    env_file:
      - .env-docker
    ports:
      - 5371:5371

  base-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: base_app
    command: /bin/sh -c "alembic upgrade head && gunicorn core.core_apps.base.base_server:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:80"
    ports:
      - 8888:80
    depends_on:
      - db
      - redis

  bus-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: bus_app
    command: gunicorn core.core_apps.bus.bus_server:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:80
    ports:
      - 8099:80
    depends_on:
      - base-app
      - db
      - redis

  jobs-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: jobs_app
    command: taskiq worker core.helpers.broker.tkq:list_brocker --fs-discover --workers 2 --log-level DEBUG
    depends_on:
      - base-app
      - db
      - redis

  basic-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: basic_app
    command: gunicorn app.basic.basic_server:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:80
    ports:
      - 8001:80
    depends_on:
      - db
      - redis
      - bus-app

  inventory-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: inventory_app
    command: gunicorn app.inventory.inventory_server:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:80
    ports:
      - 8002:80
    depends_on:
      - basic-app
      - db
      - redis
      - bus-app

  front-app:
    build:
      context: .
    env_file:
      - .env-docker
    container_name: front_app
    command: gunicorn app.front.front_server:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:80
    ports:
      - 8080:80
    depends_on:
      - basic-app
      - inventory-app
      - db
      - redis
      - bus-app
      - base-app

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - front-app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot